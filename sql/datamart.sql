-- 1. Créer la base si elle n'existe pas
IF DB_ID('snifop_dm') IS NULL
    CREATE DATABASE snifop_dm;
GO

-- 2. Utiliser la base
USE snifop_dm;
GO

-- 3. Créer le schéma dm s’il n’existe pas
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dm')
    EXEC('CREATE SCHEMA dm');
GO

-- 4. Création des dimensions
CREATE TABLE dm.DIM_PROVINCE (
    PROVINCE_SK INT PRIMARY KEY,
    PROVINCE_ID_SRC NUMERIC(38, 0) NULL,
    NOM_PROVINCE VARCHAR(255),
    NOM_REGION VARCHAR(255),
    CODE VARCHAR(255)
);

CREATE TABLE dm.DIM_BENEFICIAIRE (
    BENEFICIAIRE_SK INT PRIMARY KEY,
    BENEFICIAIRE_ID_SRC NUMERIC(38, 0) NULL,
    NOM VARCHAR(255),
    NUMERO_IDENTITE VARCHAR(255),
    GENRE VARCHAR(255),
    NATIONALITE VARCHAR(255),
    AGE INT,
    NIVEAU_SCOLAIRE VARCHAR(255),
    TYPE VARCHAR(40),
    STATUS_FORMATION VARCHAR(255),
    HANDICAPE SMALLINT,
	detenu   smallint,
	date_detebation  varchar(20) 
);

CREATE TABLE dm.DIM_INSCRIPTION (
    INSCRIPTION_SK INT PRIMARY KEY,
    INSCRIPTION_ID_SRC NUMERIC(38, 0) NULL,
    IDINSCRORG NUMERIC(38, 0) NULL,
    DATE_INSCRIPTION VARCHAR(100),
    DATE_VALIDATION VARCHAR(100),
    ANNEE_SCOLAIRE VARCHAR(255),
    MODE_FORMATION VARCHAR(20),
    TYPE_COURS VARCHAR(40),
    IS_CONTRIBUTION SMALLINT,
    IS_PASSERELLE SMALLINT,
    STATUT VARCHAR(255),
    ANNEE_ETUDE VARCHAR(255)
);

CREATE TABLE dm.DIM_FILIERE (
    FILIERE_SK INT PRIMARY KEY,
    FILIERE_ID_SRC NUMERIC(38, 0) NULL,
    NOM VARCHAR(255),
    NIVEAU_FORMATION VARCHAR(50),
    PROGRAMME VARCHAR(255),
    DUREE VARCHAR(255)
);

CREATE TABLE dm.DIM_FORMATEUR (
    FORMATEUR_SK INT PRIMARY KEY,
    FORMATEUR_ID_SRC NUMERIC(38, 0) NULL,
    NOM VARCHAR(255),
    CIN VARCHAR(30),
    EMAIL VARCHAR(255),
    SEXE VARCHAR(10),
    ADRESSE VARCHAR(255),
    VILLE VARCHAR(255),
    DIPLOME VARCHAR(255),
    SPECIALITE VARCHAR(255),
    NB_MOIS_FORMATION NUMERIC(38, 0),
    NB_MOIS_ENTREPRISE NUMERIC(38, 0)
);

CREATE TABLE dm.DIM_ETABLISSEMENT (
    ETABLISSEMENT_SK INT PRIMARY KEY,
    ETABLISSEMENT_ID_SRC NUMERIC(38, 0) NULL,
    NOM VARCHAR(255),
    TEL VARCHAR(255),
    TYPE VARCHAR(255),
    STATUT VARCHAR(255),
    ANNEE_FONDATION VARCHAR(255),
    CAPACITE_ACCUEIL VARCHAR(255),
    DATE_AUTORISATION DATETIME,
	 AUTORISE varchar(3)
);

CREATE TABLE dm.DIM_ETABLISSEMENT_HOMOLOGATION (
    ETAB_HOMOLOGATION_SK INT PRIMARY KEY,
    ETAB_HOMOLOGATION_SRC NUMERIC(38, 0) NULL,
    TYPE VARCHAR(255),
    DATE_CREATION DATETIME,
    DUREE_VALIDITE NUMERIC(38, 0)
);

CREATE TABLE dm.DIM_ETABLISSEMENT_FILIERE (
    ETAB_FILIERE_SK INT PRIMARY KEY,
    ETAB_FILIERE_SRC NUMERIC(38, 0) NULL,
    CAPACITE NUMERIC(38, 0),
    TAUX_ROULEMENT NUMERIC(38, 0),
    MODE_FORMATION VARCHAR(255)
);

CREATE TABLE dm.DIM_FORMATEUR_ETABLISSEMENT (
    FORMATEUR_ETABLISSEMENT_SK INT PRIMARY KEY,
    FORMATEUR_ETABLISSEMENT_SRC NUMERIC(38, 0) NULL,
    STATUT VARCHAR(255),
    DATE_DEBUT VARCHAR(255),
    DATE_FIN VARCHAR(255),
    ACTIF SMALLINT,
    TYPE_CONTRAT VARCHAR(255)
);

CREATE TABLE dm.DIM_candidat (
    candidat_SK INT PRIMARY KEY,
    [candidat_ID_SRC]   int  null ,
	[NOM_COMPLET]   varchar(255)  ,
	[NUMERO_IDENTITE]varchar(255)  ,
	[age]  int ,
	[GENRE] varchar(255) ,
	[NATIONALITE] varchar(255) ,
	[NIVEAU_SCOLAIRE]varchar(255) 
   
);
CREATE TABLE dm.DIM_DATE (
    DATE_SK INT PRIMARY KEY,
    Id_Date INT,
    Date DATETIME,
    Date_Complete CHAR(10),
    JourDuMois NVARCHAR(2),
    NomDuJour NVARCHAR(9),
    JourDeLaSemaine CHAR(1),
    JourDeLaSemaineDansLeMois NVARCHAR(2),
    JourDeLaSemaineDansLAnnee NVARCHAR(2),
    JourDuTrimestre NVARCHAR(3),
    JourDeLAnnee NVARCHAR(3),
    SemaineDuMois NVARCHAR(1),
    SemaineDuTrimestre NVARCHAR(2),
    SemaineDeLAnnee NVARCHAR(2),
    Mois NVARCHAR(2),
    NomDuMois NVARCHAR(9),
    MoisDuTrimestre NVARCHAR(2),
    Trimestre CHAR(1),
    NomDuTrimestre NVARCHAR(9),
    Annee CHAR(4),
    NomDeLAnnee CHAR(7),
    MoisAnnee CHAR(10),
    MMYYYY CHAR(6),
    PremierJourDuMois DATE,
    DernierJourDuMois DATE,
    PremierJourDuTrimestre DATE,
    DernierJourDuTrimestre DATE,
    PremierJourDeLAnnee DATE,
    DernierJourDeLAnnee DATE,
    Semestre CHAR(1),
    NomDuSemestre NVARCHAR(10),
    AnneeScolaire NVARCHAR(20)
);

-- 5. Faits
-- FACT 1 : Formations
use  snifop_dm
go
CREATE TABLE dm.FACT_FORMATION (
    FACT_ID INT IDENTITY(1,1) PRIMARY KEY,
    FORMATEUR_SK INT NOT NULL,
    FORMATEUR_ETABLISSEMENT_SK INT NOT NULL,
    FILIERE_SK INT NOT NULL,
    ETABLISSEMENT_SK INT NOT NULL,
    ETAB_FILIERE_SK INT NULL,
    PROVINCE_SK INT NOT NULL,

    -- FK Constraints
    CONSTRAINT FK_FACT_FORMATION_FORMATEUR FOREIGN KEY (FORMATEUR_SK) REFERENCES dm.DIM_FORMATEUR(FORMATEUR_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_FORMATEUR_ETABLISSEMENT FOREIGN KEY (FORMATEUR_ETABLISSEMENT_SK) REFERENCES dm.DIM_FORMATEUR_ETABLISSEMENT(FORMATEUR_ETABLISSEMENT_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_FILIERE FOREIGN KEY (FILIERE_SK) REFERENCES dm.DIM_FILIERE(FILIERE_SK),
    CONSTRAINT FK_FACT_FORMATION_ETABLISSEMENT FOREIGN KEY (ETABLISSEMENT_SK) REFERENCES dm.DIM_ETABLISSEMENT(ETABLISSEMENT_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_ETAB_FILIERE FOREIGN KEY (ETAB_FILIERE_SK) REFERENCES dm.DIM_ETABLISSEMENT_FILIERE(ETAB_FILIERE_SK)ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_PROVINCE FOREIGN KEY (PROVINCE_SK) REFERENCES dm.DIM_PROVINCE(PROVINCE_SK) ON DELETE CASCADE
);

-- FACT 2 : Gestion établissements
CREATE TABLE dm.FACT_ENCADREMENT (
FACT_ID INT IDENTITY(1,1) PRIMARY KEY,
ETABLISSEMENT_SK INT NOT NULL,
    FORMATEUR_SK INT NOT NULL,
    FORMATEUR_ETABLISSEMENT_SK INT NOT NULL,
	BENEFICIAIRE_SK INT NOT NULL,
    INSCRIPTION_SK INT NOT NULL,
    
    
    PROVINCE_SK INT NOT NULL,
	DATE_DEBUT_AFFECTATION_SK  int  not  null,
	ANNEE_SCOLAIRE_SK	int not null 

    -- FK Constraints
    CONSTRAINT FK_FACT_FORMATION_FORMATEUR1 FOREIGN KEY (FORMATEUR_SK) REFERENCES dm.DIM_FORMATEUR(FORMATEUR_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_FORMATEUR_ETABLISSEMENT1 FOREIGN KEY (FORMATEUR_ETABLISSEMENT_SK) REFERENCES dm.DIM_FORMATEUR_ETABLISSEMENT(FORMATEUR_ETABLISSEMENT_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_INSCRIPTION1 FOREIGN KEY (INSCRIPTION_SK) REFERENCES dm.DIM_INSCRIPTION(INSCRIPTION_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_BENEFICIAIRE1 FOREIGN KEY (BENEFICIAIRE_SK) REFERENCES dm.DIM_BENEFICIAIRE(BENEFICIAIRE_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_ETABLISSEMENT1 FOREIGN KEY (ETABLISSEMENT_SK) REFERENCES dm.DIM_ETABLISSEMENT(ETABLISSEMENT_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_PROVINCE1 FOREIGN KEY (PROVINCE_SK) REFERENCES dm.DIM_PROVINCE(PROVINCE_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_FORMATION_DATE3 FOREIGN KEY (DATE_DEBUT_AFFECTATION_SK) REFERENCES dm.DIM_DATE(DATE_SK) ON DELETE NO ACTION,
    CONSTRAINT FK_FACT_FORMATION_DATE5 FOREIGN KEY (ANNEE_SCOLAIRE_SK) REFERENCES dm.DIM_DATE(DATE_SK) ON DELETE NO ACTION
);



CREATE TABLE dm.FACT_GESTION_ETAB (
    FACT_ID INT IDENTITY(1,1) PRIMARY KEY,
    ETABLISSEMENT_SK INT NOT NULL,
    ETAB_HOMOLOGATION_SK INT NULL,
    ETAB_FILIERE_SK INT NULL,
    PROVINCE_SK INT NOT NULL,
	FILIERE_SK  int  NOT  NULL, 
    date_etab_KEY    INT  NOT NULL, 
    DateCloture_key INT  NULL,
    DATE_SK_AUTORISATION INT NOT NULL,


    CONSTRAINT FK_FACT_GEST_ETAB_ETABLISSEMENT FOREIGN KEY (ETABLISSEMENT_SK)
        REFERENCES dm.DIM_ETABLISSEMENT(ETABLISSEMENT_SK) ON DELETE CASCADE,
		
    CONSTRAINT FK_FACT_GEST_FILIERE FOREIGN KEY (FILIERE_SK)
        REFERENCES dm.DIM_FILIERE(FILIERE_SK) ON DELETE CASCADE,
    CONSTRAINT FK_FACT_GEST_ETAB_HOMO FOREIGN KEY (ETAB_HOMOLOGATION_SK)
        REFERENCES dm.DIM_ETABLISSEMENT_HOMOLOGATION(ETAB_HOMOLOGATION_SK) ON DELETE CASCADE,

    CONSTRAINT FK_FACT_GEST_ETAB_FILIERE FOREIGN KEY (ETAB_FILIERE_SK)
        REFERENCES dm.DIM_ETABLISSEMENT_FILIERE(ETAB_FILIERE_SK) ON DELETE CASCADE,

    CONSTRAINT FK_FACT_GEST_ETAB_PROVINCE FOREIGN KEY (PROVINCE_SK)
        REFERENCES dm.DIM_PROVINCE(PROVINCE_SK) ON DELETE CASCADE,

    CONSTRAINT FK_FACT_GEST_ETAB_DATE1 FOREIGN KEY (date_etab_KEY)
        REFERENCES dm.DIM_DATE(DATE_SK) ON DELETE NO ACTION,

    CONSTRAINT FK_FACT_GEST_ETAB_DATE2 FOREIGN KEY (DateCloture_key)
        REFERENCES dm.DIM_DATE(DATE_SK) ON DELETE NO ACTION,

    CONSTRAINT FK_FACT_GEST_ETAB_DATE3 FOREIGN KEY (DATE_SK_AUTORISATION)
        REFERENCES dm.DIM_DATE(DATE_SK) ON DELETE NO ACTION
);



