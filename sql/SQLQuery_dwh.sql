-- Création du schéma s'il n'existe pas

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'dwh')
BEGIN
    EXEC('CREATE SCHEMA dwh');
END
GO

-- Drop tables dans l'ordre inverse des dépendances
IF OBJECT_ID('dwh.DWH_SUIVI_HEURE_FORMATEUR', 'U') IS NOT NULL DROP TABLE dwh.DWH_SUIVI_HEURE_FORMATEUR;
IF OBJECT_ID('dwh.DWH_INSCRIPTION', 'U') IS NOT NULL DROP TABLE dwh.DWH_INSCRIPTION;
IF OBJECT_ID('dwh.DWH_ETABLISSEMENT_HOMOLOGATION', 'U') IS NOT NULL DROP TABLE dwh.DWH_ETABLISSEMENT_HOMOLOGATION;
IF OBJECT_ID('dwh.DWH_ETABLISSEMENT_FILIERE', 'U') IS NOT NULL DROP TABLE dwh.DWH_ETABLISSEMENT_FILIERE;
IF OBJECT_ID('dwh.DWH_BENEFICIAIRE', 'U') IS NOT NULL DROP TABLE dwh.DWH_BENEFICIAIRE;
IF OBJECT_ID('dwh.DWH_HOMOLOGATION', 'U') IS NOT NULL DROP TABLE dwh.DWH_HOMOLOGATION;
IF OBJECT_ID('dwh.DWH_FORMATEUR', 'U') IS NOT NULL DROP TABLE dwh.DWH_FORMATEUR;
IF OBJECT_ID('dwh.DWH_FILIERE', 'U') IS NOT NULL DROP TABLE dwh.DWH_FILIERE;
IF OBJECT_ID('dwh.DWH_ETABLISSEMENT', 'U') IS NOT NULL DROP TABLE dwh.DWH_ETABLISSEMENT;
IF OBJECT_ID('dwh.DWH_PROVINCE', 'U') IS NOT NULL DROP TABLE dwh.DWH_PROVINCE;
IF OBJECT_ID('dwh.DWH_REGION', 'U') IS NOT NULL DROP TABLE dwh.DWH_REGION;
GO

-- Table DWH_REGION
CREATE TABLE dwh.DWH_REGION (
    REGION_SK INT IDENTITY(1,1) PRIMARY KEY,
    REGION_ID_SRC INT,
    CODE VARCHAR(10),
    NOM VARCHAR(100),
    NOM_AR VARCHAR(100),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_PROVINCE
CREATE TABLE dwh.DWH_PROVINCE (
    PROVINCE_SK INT IDENTITY(1,1) PRIMARY KEY,
    PROVINCE_ID_SRC INT,
    REGION_SK INT FOREIGN KEY REFERENCES dwh.DWH_REGION(REGION_SK),
    CODE VARCHAR(10),
    NOM VARCHAR(100),
    NOM_AR VARCHAR(100),
    URBIN VARCHAR(10),
    DELEGATION_ID INT,
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_ETABLISSEMENT
CREATE TABLE dwh.DWH_ETABLISSEMENT (
    ETABLISSEMENT_SK INT IDENTITY(1,1) PRIMARY KEY,
    ETABLISSEMENT_ID_SRC INT,
    PROVINCE_SK INT FOREIGN KEY REFERENCES dwh.DWH_PROVINCE(PROVINCE_SK),
    NOM VARCHAR(255),
    TEL VARCHAR(20),
    TYPE VARCHAR(50),
    STATUT VARCHAR(50),
    ANNEE_FONDATION INT,
    CAPACITE_ACCUEIL INT,
    FONDATEUR_ID INT,
    SIGLE VARCHAR(50),
    VILLE_ID INT,
    DATE_AUTORISATION DATE,
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_FORMATEUR
CREATE TABLE dwh.DWH_FORMATEUR (
    FORMATEUR_SK INT IDENTITY(1,1) PRIMARY KEY,
    FORMATEUR_ID_SRC INT,
    NOM VARCHAR(100),
    CIN VARCHAR(20),
    EMAIL VARCHAR(100),
    SEXE VARCHAR(10),
    ADRESSE VARCHAR(255),
    VILLE VARCHAR(100),
    DIPLOME VARCHAR(100),
    SPECIALITE VARCHAR(100),
    NB_MOIS_FORMATION INT,
    NB_MOIS_ENTREPRISE INT,
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_FILIERE
CREATE TABLE dwh.DWH_FILIERE (
    FILIERE_SK INT IDENTITY(1,1) PRIMARY KEY,
    FILIERE_ID_SRC INT,
    SECTEUR_ID INT,
    NOM VARCHAR(255),
    NIVEAU_FORMATION VARCHAR(50),
    PROGRAMME VARCHAR(50),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_ETABLISSEMENT_FILIERE
CREATE TABLE dwh.DWH_ETABLISSEMENT_FILIERE (
    ETABLISSEMENT_SK INT FOREIGN KEY REFERENCES dwh.DWH_ETABLISSEMENT(ETABLISSEMENT_SK),
    FILIERE_SK INT FOREIGN KEY REFERENCES dwh.DWH_FILIERE(FILIERE_SK),
    CAPACITE INT,
    TAUX_ROULEMENT FLOAT,
    MODE_FORMATION VARCHAR(50),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1,
    PRIMARY KEY (ETABLISSEMENT_SK, FILIERE_SK)
);

-- Table DWH_HOMOLOGATION
CREATE TABLE dwh.DWH_HOMOLOGATION (
    HOMOLOGATION_SK INT IDENTITY(1,1) PRIMARY KEY,
    HOMOLOGATION_ID_SRC INT,
    TYPE VARCHAR(50),
    ORGANISME VARCHAR(100),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_ETABLISSEMENT_HOMOLOGATION
CREATE TABLE dwh.DWH_ETABLISSEMENT_HOMOLOGATION (
    HOMOLOGATION_SK INT FOREIGN KEY REFERENCES dwh.DWH_HOMOLOGATION(HOMOLOGATION_SK),
    ETABLISSEMENT_SK INT FOREIGN KEY REFERENCES dwh.DWH_ETABLISSEMENT(ETABLISSEMENT_SK),
    FILIERE_SK INT FOREIGN KEY REFERENCES dwh.DWH_FILIERE(FILIERE_SK),
    DATE_CREATION DATE,
    DUREE_VALIDITE INT,
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1,
    PRIMARY KEY (HOMOLOGATION_SK, ETABLISSEMENT_SK, FILIERE_SK)
);

-- Table DWH_BENEFICIAIRE
CREATE TABLE dwh.DWH_BENEFICIAIRE (
    BENEFICIAIRE_SK INT IDENTITY(1,1) PRIMARY KEY,
    BENEFICIAIRE_ID_SRC INT,
    NOM VARCHAR(100),
    NUMERO_IDENTITE VARCHAR(50),
    GENRE VARCHAR(10),
    NATIONALITE VARCHAR(50),
    DATE_NAISSANCE DATE,
    NIVEAU_SCOLAIRE VARCHAR(50),
    TYPE VARCHAR(50),
    STATUS_FORMATION VARCHAR(50),
    HANDICAPE BIT,
    VILLE_NAISSANCE VARCHAR(100),
    PROVINCE_SK INT FOREIGN KEY REFERENCES dwh.DWH_PROVINCE(PROVINCE_SK),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_INSCRIPTION
CREATE TABLE dwh.DWH_INSCRIPTION (
    INSCRIPTION_SK INT IDENTITY(1,1) PRIMARY KEY,
    INSCRIPTION_ID_SRC INT,
    BENEFICIAIRE_SK INT FOREIGN KEY REFERENCES dwh.DWH_BENEFICIAIRE(BENEFICIAIRE_SK),
    FILIERE_SK INT FOREIGN KEY REFERENCES dwh.DWH_FILIERE(FILIERE_SK),
    ETABLISSEMENT_SK INT FOREIGN KEY REFERENCES dwh.DWH_ETABLISSEMENT(ETABLISSEMENT_SK),
    DATE_INSCRIPTION DATE,
    DATE_VALIDATION DATE,
    ANNEE_SCOLAIRE VARCHAR(10),
    MODE_FORMATION VARCHAR(50),
    TYPE_COURS VARCHAR(50),
    IS_CONTRIBUTION BIT,
    IS_PASSERELLE BIT,
    STATUT VARCHAR(50),
    ANNEE_ETUDE VARCHAR(50),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

-- Table DWH_SUIVI_HEURE_FORMATEUR
CREATE TABLE dwh.DWH_SUIVI_HEURE_FORMATEUR (
    SUIVI_SK INT IDENTITY(1,1) PRIMARY KEY,
    DATE_SUIVI DATE,
    HEURE_COURS_TH FLOAT,
    HEURE_COURS_PR FLOAT,
    FORMATEUR_SK INT FOREIGN KEY REFERENCES dwh.DWH_FORMATEUR(FORMATEUR_SK),
    UNITE_FORMATION_ID INT,
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);
-- Table DWH_FORMATEUR_ETABLISSEMENT
CREATE TABLE dwh.DWH_FORMATEUR_ETABLISSEMENT (
    FORMATEUR_ETABLISSEMENT_SK INT IDENTITY(1,1) PRIMARY KEY,
    ETABLISSEMENT_SK INT FOREIGN KEY REFERENCES dwh.DWH_ETABLISSEMENT(ETABLISSEMENT_SK),
    FORMATEUR_SK INT FOREIGN KEY REFERENCES dwh.DWH_FORMATEUR(FORMATEUR_SK),
    STATUT VARCHAR(50),
    DATE_DEBUT DATE,
    DATE_FIN DATE,
    ACTIF CHAR(1),
    TYPE_CONTRAT VARCHAR(50),
    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);


GO
CREATE TABLE [DWH].DWH_candidat (
candidat_SK INT IDENTITY(1,1) PRIMARY KEY,
   candidat_ID_SRC INT,

    NOM_COMPLET VARCHAR(255),
    NUMERO_IDENTITE VARCHAR(255),
    age INT,
    GENRE VARCHAR(255),
    NATIONALITE VARCHAR(255),
    NIVEAU_SCOLAIRE VARCHAR(255),
	 DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1
);

DROP  TABLE [DWH].DWH_candidat
ALTER TABLE dwh.DWH_BENEFICIAIRE
ADD 
    DATE_DE_DETENATION VARCHAR(20),
    DETENU SMALLINT,
    ID_CANDIDAT INT;

ALTER TABLE dwh.DWH_BENEFICIAIRE
ADD CONSTRAINT FK_DWH_BENEFICIAIRE_CANDIDAT
FOREIGN KEY (id_candidat_SK) REFERENCES [DWH].DWH_candidat(candidat_SK);

ALTER TABLE dwh.DWH_BENEFICIAIRE
DROP CONSTRAINT FK_DWH_BENEFICIAIRE_CANDIDAT;




CREATE TABLE dwh.DWH_formateur_filiere (
    formateur_filiere_sk  INT IDENTITY(1,1) PRIMARY KEY ,
	formateur_filiere_id_src int ,
    etablissement_sk INT NOT NULL,
    filiere_sk INT NOT NULL,
    formateur_sk INT NOT NULL,

    DateCreation DATETIME DEFAULT GETDATE(),
    DateMaj DATETIME,
    IsActif BIT DEFAULT 1,

    CONSTRAINT FK_FormateurFiliere_Etablissement FOREIGN KEY (etablissement_SK)
        REFERENCES dwh.DWH_ETABLISSEMENT(ETABLISSEMENT_SK),

    CONSTRAINT FK_FormateurFiliere_Filiere FOREIGN KEY (filiere_SK)
        REFERENCES dwh.DWH_FILIERE(FILIERE_SK),

    CONSTRAINT FK_FormateurFiliere_Formateur FOREIGN KEY (formateur_SK)
        REFERENCES dwh.DWH_FORMATEUR(FORMATEUR_SK)
);
